{"version":3,"file":"static/webpack/static/development/pages/index.js.8d31287142caabeb5b04.hot-update.js","sources":["webpack:///./components/Header.js","webpack:///./pages/index.js"],"sourcesContent":["import Link from 'next/link'\n\nconst linkStyle = {\n  marginRight: 15\n}\n\nconst Header = () => (\n    <div>\n        <Link href=\"/\">\n          <a style={linkStyle}>Home</a>\n        </Link>\n        <Link href=\"/pie\">\n          <a style={linkStyle}>Pie</a>\n        </Link>\n        <Link href=\"/bar\">\n          <a style={linkStyle}>Bar</a>\n        </Link>\n        <Link href=\"/bubbles\">\n          <a style={linkStyle}>Bubbles</a>\n        </Link>\n        <Link href=\"/sankey\">\n          <a style={linkStyle}>Sankey</a>\n        </Link>\n        <Link href=\"/treemap\">\n          <a style={linkStyle}>TreeMap</a>\n        </Link>\n    </div>\n)\n\nexport default Header\n","import Layout from '../components/MyLayout.js'\n\nconst Index = (props) => (\n  <Layout>\n      <h3>Maquettes scanR avec <a href=\"http://nivo.rocks/\">nivo</a> et React</h3>\n      <p>\n        La librairie permet de recouvrir à peu près tous les types de représentations\n        que l'on souhaite faire, sauf le type Carte avec bulles où il faudra trouver une alternative.\n        La librairie est très simple à prendre en main, mais sa personnalisation a des limites.\n        Pour des développeurs peu expérimentés en D3.js ça peut constituer une bonne approche, pourvu\n        qu'on soit flexible sur le rendu final.\n      </p>\n  </Layout>\n)\n\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AADA;AACA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAlBA;AACA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AAAA;AAEA;AAAA;AAFA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}